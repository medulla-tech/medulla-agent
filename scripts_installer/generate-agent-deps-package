#!/bin/bash

# -*- coding: utf-8; -*-
#
# (c) 2019 siveo, http://www.siveo.net
#
# Author(s):
#
# This file is part of Pulse 2, http://www.siveo.net
#
# Pulse 2 is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# Pulse 2 is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pulse 2.  If not, see <http://www.gnu.org/licenses/>.

# Files needed

#   https://github.com/syncthing/syncthing/releases/download/v1.1.0/syncthing-windows-386-v1.1.0.zip
#   https://github.com/syncthing/syncthing/releases/download/v1.1.0/syncthing-windows-amd64-v1.1.0.zip
#   https://github.com/syncthing/syncthing/releases/download/v1.1.0/syncthing-macos-amd64-v1.1.0.tar.gz
#   https://files.pythonhosted.org/packages/36/60/45f30390a38b1f92e0a8cf4de178cd7c2bc3f874c85430e40ccf99df8fe7/pysftp-0.2.9.tar.gz
#   https://files.pythonhosted.org/packages/95/a8/72f860ff71bc260a4c815f50c65e04d69b9c5a3e51ff82afe3cd6757faa9/paramiko-1.18.5-py2.py3-none-any.whl
#   https://pypi.python.org/packages/60/db/645aa9af249f059cc3a368b118de33889219e0362141e75d4eaf6f80f163/pycrypto-2.6.1.tar.gz
#   https://files.pythonhosted.org/packages/63/f4/73669d51825516ce8c43b816c0a6b64cd6eb71d08b99820c00792cb42222/ecdsa-0.13-py2.py3-none-any.whl
#   https://files.pythonhosted.org/packages/ef/4e/9f04fc58040cbf05984d7ca9393ff2dbc8b6909b163a768fc28786eacf06/syncthing-2.3.1.tar.gz
#   https://files.pythonhosted.org/packages/4b/0d/7ed381ab4fe80b8ebf34411d14f253e1cf3e56e2820ffa1d8844b23859a2/python_dateutil-2.6.1-py2.py3-none-any.whl
#   https://pypi.python.org/packages/c8/0a/b6723e1bc4c516cb687841499455a8505b44607ab535be01091c0f24f079/six-1.10.0-py2.py3-none-any.whl
#   https://files.pythonhosted.org/packages/49/df/50aa1999ab9bde74656c2919d9c0c085fd2b3775fd3eca826012bef76d8c/requests-2.18.4-py2.py3-none-any.whl
#   https://files.pythonhosted.org/packages/27/cc/6dd9a3869f15c2edfab863b992838277279ce92663d334df9ecf5106f5c6/idna-2.6-py2.py3-none-any.whl
#   https://files.pythonhosted.org/packages/63/cb/6965947c13a94236f6d4b8223e21beb4d576dc72e8130bd7880f600839b8/urllib3-1.22-py2.py3-none-any.whl
#   https://files.pythonhosted.org/packages/60/75/f692a584e85b7eaba0e03827b3d51f45f571c2e793dd731e598828d380aa/certifi-2019.3.9-py2.py3-none-any.whl
#   https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl
#   https://pypi.python.org/packages/28/df/755dab9f83c37031aea1cd9915673b5633665c575d649e812657df95b944/plyvel-1.0.1.tar.gz

# Check if called with uuid to be used
if [[ $1 =~ ^\{?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}\}?$ ]]; then
    PACKAGE_UUID=$1
else
    echo "ERROR: $0 must be called with a UUID as parameter"
    exit 1
fi

# A few settings
PACKAGE_NAME="Pulse Agent dependencies"
PACKAGE_DESC="Dependencies for Pulse Agent"
AGENT_VERSION=$(grep ^AGENT_VERSION= /var/lib/pulse2/clients/win/generate-pulse-agent-win.sh | cut -d '"' -f2)

PULSE_AGENT_BASE_PATH="/var/lib/pulse2/clients"

WIN_FILETREE_GENERATOR_FILENAME="pulse-filetree-generator.exe"
MAC_FILETREE_GENERATOR_FILENAME="pulse-filetree-generator"
MAC_SYNCTHING_FILENAME="syncthing-macos-amd64-v1.1.0.tar.gz"
WIN32_SYNCTHING_FILENAME="syncthing-windows-386-v1.1.0.zip"
WIN64_SYNCTHING_FILENAME="syncthing-windows-amd64-v1.1.0.zip"
PY_MAC_PLYVEL_FILENAME="plyvel-1.0.1.tar.gz"
PY_SFTP_FILENAME="pysftp-0.2.9.tar.gz"
PY_PATHLIB_FILENAME="pathlib-1.0.1.tar.gz"
PY_SFTP_PARAMIKO_FILENAME="paramiko-1.18.5-py2.py3-none-any.whl"
PY_SFTP_PYCRYPTO_FILENAME="pycrypto-2.6.1.tar.gz"
PY_SFTP_ECDSA_FILENAME="ecdsa-0.13-py2.py3-none-any.whl"
PY_SYNCTHING_FILENAME="syncthing-2.3.1.tar.gz"
PY_SYNCTHING_DATEUTIL_FILENAME="python_dateutil-2.6.1-py2.py3-none-any.whl"
PY_SYNCTHING_SIX_FILENAME="six-1.10.0-py2.py3-none-any.whl"
PY_SYNCTHING_REQUESTS_FILENAME="requests-2.18.4-py2.py3-none-any.whl"
PY_SYNCTHING_IDNA_FILENAME="idna-2.6-py2.py3-none-any.whl"
PY_SYNCTHING_URLLIB_FILENAME="urllib3-1.22-py2.py3-none-any.whl"
PY_SYNCTHING_CERTIFI_FILENAME="certifi-2019.3.9-py2.py3-none-any.whl"
PY_SYNCTHING_CHARDET_FILENAME="chardet-3.0.4-py2.py3-none-any.whl"

#### CREATE THE PACKAGE
echo "INFO: Generating ${PACKAGE_NAME} package..."

echo "  Package UUID: ${PACKAGE_UUID}"

# First check if the package exists.
# If it is the case, keep its uuid for deleting it after generation.
old_uuid=$(grep "${PACKAGE_NAME} v${AGENT_VERSION}" /var/lib/pulse2/packages/* -R | grep xmppdeploy.json | grep -P -o '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}')

# Create the package
mkdir -p /var/lib/pulse2/packages/${PACKAGE_UUID}
pushd /var/lib/pulse2/packages/${PACKAGE_UUID}

# Copy all needed files
# Pulse Filetree generator
cp ${PULSE_AGENT_BASE_PATH}/win/${WIN_FILETREE_GENERATOR_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/mac/${MAC_FILETREE_GENERATOR_FILENAME} .
# Syncthing
cp ${PULSE_AGENT_BASE_PATH}/mac/downloads/${MAC_SYNCTHING_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/${WIN32_SYNCTHING_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/${WIN64_SYNCTHING_FILENAME} .
# Python modules needed for syncthing
cp ${PULSE_AGENT_BASE_PATH}/mac/downloads/python_modules/${PY_MAC_PLYVEL_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SFTP_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_PATHLIB_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SFTP_PARAMIKO_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SFTP_PYCRYPTO_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SFTP_ECDSA_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SYNCTHING_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SYNCTHING_DATEUTIL_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SYNCTHING_SIX_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SYNCTHING_REQUESTS_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SYNCTHING_IDNA_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SYNCTHING_URLLIB_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SYNCTHING_CERTIFI_FILENAME} .
cp ${PULSE_AGENT_BASE_PATH}/win/downloads/python_modules/${PY_SYNCTHING_CHARDET_FILENAME} .

# Generate install commands
# Pulse Filetree generator
FILETREE_GENERATOR_INSTALL_CMD_WIN="copy ${WIN_FILETREE_GENERATOR_FILENAME} \"%PROGRAMFILES%/Pulse/bin\""
FILETREE_GENERATOR_INSTALL_CMD_WIN_ENCODED=$(echo -e ${FILETREE_GENERATOR_INSTALL_CMD_WIN} | base64 --wrap=0)
FILETREE_GENERATOR_INSTALL_CMD_MAC="cp \"${MAC_FILETREE_GENERATOR_FILENAME}\" \"/Library/Application Support/Pulse/bin\"\n
chmod +x \"/Library/Application Support/Pulse/bin/${MAC_FILETREE_GENERATOR_FILENAME}\"\n
xattr -d com.apple.quarantine \"/Library/Application Support/Pulse/bin/${MAC_FILETREE_GENERATOR_FILENAME}\""
FILETREE_GENERATOR_INSTALL_CMD_MAC_ENCODED=$(echo -e ${FILETREE_GENERATOR_INSTALL_CMD_MAC} | base64 --wrap=0)
# Syncthing
WIN32_SYNCTHING_FOLDERNAME=${WIN32_SYNCTHING_FILENAME::-4}
WIN64_SYNCTHING_FOLDERNAME=${WIN64_SYNCTHING_FILENAME::-4}
SYNCTHING_INSTALL_CMD_WIN="echo %PROCESSOR_ARCHITECTURE% | find /i \"x86\" > nul\n
if %errorlevel%==0 (\n
  taskkill /F /IM syncthing.exe\n
  powershell.exe -NoP -NonI -Command \"Expand-Archive -Path ${WIN32_SYNCTHING_FILENAME}\"\n
  copy \"${WIN32_SYNCTHING_FOLDERNAME}/${WIN32_SYNCTHING_FOLDERNAME}/syncthing.exe\" \"%PROGRAMFILES%/Pulse/bin\"\n
) else (\n
  taskkill /F /IM syncthing.exe\n
  powershell.exe -NoP -NonI -Command \"Expand-Archive -Path ${WIN64_SYNCTHING_FILENAME}\"\n
  copy \"${WIN64_SYNCTHING_FOLDERNAME}\\${WIN64_SYNCTHING_FOLDERNAME}\\syncthing.exe\" \"%PROGRAMFILES%/Pulse/bin\"\n
)"
SYNCTHING_INSTALL_CMD_WIN_ENCODED=$(echo -e ${SYNCTHING_INSTALL_CMD_WIN} | base64 --wrap=0)
SYNCTHING_INSTALL_CMD_MAC="tar xzf ${MAC_SYNCTHING_FILENAME}\n
cp \"${MAC_SYNCTHING_FILENAME%.*}/syncthing\" \"/Library/Application Support/Pulse/bin\"\n
chmod +x \"/Library/Application Support/Pulse/bin/syncthing\"\n
xattr -d com.apple.quarantine \"/Library/Application Support/Pulse/bin/syncthing\""
SYNCTHING_INSTALL_CMD_MAC_ENCODED=$(echo -e ${SYNCTHING_INSTALL_CMD_MAC} | base64 --wrap=0)
# Python modules needed for syncthing
SYNCTHING_PY_MODULES_INSTALL_CMD_WIN="python -m pip install --upgrade --no-index --find-links=\".\" ${PY_SFTP_FILENAME}\n
python -m pip install --upgrade --no-index --find-links=\".\" ${PY_PATHLIB_FILENAME}\n
python -m pip install --upgrade --no-index --find-links=\".\" ${PY_SYNCTHING_FILENAME}"
SYNCTHING_PY_MODULES_INSTALL_CMD_WIN_ENCODED=$(echo -e ${SYNCTHING_PY_MODULES_INSTALL_CMD_WIN} | base64 --wrap=0)
SYNCTHING_PY_MODULES_INSTALL_CMD_MAC="/usr/local/bin/pip2 install --upgrade --no-index --find-links=\".\" ${PY_MAC_PLYVEL_FILENAME}\n
/usr/local/bin/pip2 install --upgrade --no-index --find-links=\".\" ${PY_SFTP_FILENAME}\n
/usr/local/bin/pip2 install --upgrade --no-index --find-links=\".\" ${PY_SYNCTHING_FILENAME}"
SYNCTHING_PY_MODULES_INSTALL_CMD_MAC_ENCODED=$(echo -e ${SYNCTHING_PY_MODULES_INSTALL_CMD_MAC} | base64 --wrap=0)
REGISTRY_CMD_WIN="REG ADD \"HKLM\Software\Microsoft\Windows\CurrentVersion\Uninstall\\${PACKAGE_NAME}\" /f\n
REG ADD \"HKLM\Software\Microsoft\Windows\CurrentVersion\Uninstall\\${PACKAGE_NAME}\" /v DisplayName /t REG_SZ /d \"${PACKAGE_NAME}\" /f\n
REG ADD \"HKLM\Software\Microsoft\Windows\CurrentVersion\Uninstall\\${PACKAGE_NAME}\" /v DisplayVersion /t REG_SZ /d ${AGENT_VERSION} /f\n
REG ADD \"HKLM\Software\Microsoft\Windows\CurrentVersion\Uninstall\\${PACKAGE_NAME}\" /v Publisher /t REG_SZ /d \"SIVEO\" /f"
REGISTRY_CMD_WIN_ENCODED=$(echo -e ${REGISTRY_CMD_WIN} | base64 --wrap=0)

# Generate xmppdeploy.json
cat <<EOF > xmppdeploy.json
{
    "info": {
        "description": "${PACKAGE_DESC}",
        "name": "${PACKAGE_NAME} v${AGENT_VERSION}",
        "software": "${PACKAGE_NAME}",
        "transferfile": true,
        "methodetransfert": "pushrsync",
        "Dependency": [],
        "version": "${AGENT_VERSION}",
        "metagenerator": "manual"
    },
    "win": {
        "sequence": [
            {
                "typescript": "Batch",
                "script": "${FILETREE_GENERATOR_INSTALL_CMD_WIN_ENCODED}",
                "actionlabel": "93e62cea",
                "step": 0,
                "codereturn": "",
                "error": 5,
                "action": "actionprocessscriptfile",
                "@resultcommand": "@resultcommand"
            },
            {
                "typescript": "Batch",
                "script": "${SYNCTHING_INSTALL_CMD_WIN_ENCODED}",
                "actionlabel": "9242aa5c",
                "step": 1,
                "codereturn": "",
                "error": 5,
                "action": "actionprocessscriptfile",
                "@resultcommand": "@resultcommand"
            },
            {
                "typescript": "Batch",
                "script": "${SYNCTHING_PY_MODULES_INSTALL_CMD_WIN_ENCODED}",
                "actionlabel": "9daecc53",
                "step": 2,
                "codereturn": "",
                "error": 5,
                "action": "actionprocessscriptfile",
                "@resultcommand": "@resultcommand"
            },
            {
                "typescript": "Batch",
                "script": "${REGISTRY_CMD_WIN_ENCODED}",
                "actionlabel": "caab5c99",
                "step": 3,
                "codereturn": "",
                "error": 5,
                "action": "actionprocessscriptfile",
                "@resultcommand": "@resultcommand"
            },
            {
                "action": "actionsuccescompletedend",
                "step": 4,
                "actionlabel": "e0e3bbc2",
                "clear": "True",
                "inventory": "True"
            },
            {
                "action": "actionerrorcompletedend",
                "step": 5,
                "actionlabel": "730427c3"
            }
        ]
    },
    "mac": {
        "sequence": [
            {
                "typescript": "Batch",
                "script": "${FILETREE_GENERATOR_INSTALL_CMD_MAC_ENCODED}",
                "actionlabel": "482ede10",
                "step": 0,
                "codereturn": "",
                "error": 4,
                "action": "actionprocessscriptfile",
                "@resultcommand": "@resultcommand"
            },
            {
                "typescript": "Batch",
                "script": "${SYNCTHING_INSTALL_CMD_MAC_ENCODED}",
                "actionlabel": "dc5ab15b",
                "step": 1,
                "codereturn": "",
                "error": 4,
                "action": "actionprocessscriptfile",
                "@resultcommand": "@resultcommand"
            },
            {
                "typescript": "Batch",
                "script": "${SYNCTHING_PY_MODULES_INSTALL_CMD_MAC_ENCODED}",
                "actionlabel": "72919c43",
                "step": 2,
                "codereturn": "",
                "error": 4,
                "action": "actionprocessscriptfile",
                "@resultcommand": "@resultcommand"
            },
            {
                "action": "actionsuccescompletedend",
                "step": 3,
                "actionlabel": "b0a602a2",
                "clear": "True",
                "inventory": "True"
            },
            {
                "action": "actionerrorcompletedend",
                "step": 4,
                "actionlabel": "8cafb6ec"
            }
        ]
    },
    "metaparameter": {
        "win": {
            "label": {
                "93e62cea": 0,
                "9242aa5c": 1,
                "9daecc53": 2,
                "caab5c99": 3,
                "e0e3bbc2": 4,
                "730427c3": 5
            }
        },
        "mac": {
            "label": {
                "482ede10": 0,
                "dc5ab15b": 1,
                "72919c43": 2,
                "b0a602a2": 3,
                "8cafb6ec": 4
            }
        },
        "os": [
            "win",
            "mac"
        ]
    }
}
EOF

# Generate conf.json
cat <<EOF > conf.json
{"commands":{"postCommandSuccess":{"command": "", "name": ""},"installInit": {"command": "", "name": ""},"postCommandFailure": {"command": "", "name": ""},"command": {"command": "DO NOT EDIT THIS PACKAGE", "name": ""},"preCommand": {"command": "", "name": ""}}, "description": "${PACKAGE_DESC}","targetos": "linux", "entity_id": "0", "sub_packages": [], "reboot": 0, "version": "${AGENT_VERSION}",
"inventory": {"associateinventory": "1", "licenses": "10000", "queries": {"Qversion": "${AGENT_VERSION}*", "Qvendor": "", "boolcnd": "", "Qsoftware": "pulse*agent*dependencies"}}, "id": "${PACKAGE_UUID}", "name": "${PACKAGE_NAME} v${AGENT_VERSION}", "metagenerator": "manual"}
EOF

popd
echo "INFO: Generating Agent dependencies package... Done"

# Change permissions on the package
chown -R syncthing: /var/lib/pulse2/packages/${PACKAGE_UUID}

# Delete old version if found
if [[ ${old_uuid} != '' ]]; then
    echo "INFO: Deleting package ${old_uuid}..."
    rm -rf /var/lib/pulse2/packages/${old_uuid}
    echo "INFO: Deleting package ${old_uuid}... Done"
fi
