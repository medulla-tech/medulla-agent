#!/bin/bash
# -*- coding: utf-8; -*-
# SPDX-FileCopyrightText: 2016-2023 Siveo <support@siveo.net>
# SPDX-License-Identifier: GPL-3.0-or-later
### BEGIN INIT INFO
# Provides:          pulse-xmpp-agent-machine 
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start and stop pulse2 XMPP Agent
# Description:       Start and stop pulse2 XMPP Agent
### END INIT INFO

# Redhat based distributions specific
# chkconfig: 345 99 60
# description: Pulse2 XMPP Agent

# Variables
DESC="Pulse2 XMPP Agent"

if [ -e "/usr/share/pyshared/pulse_xmpp_agent/launcher.py" ]; then
       DAEMON="/usr/share/pyshared/pulse_xmpp_agent/launcher.py"
else
       DAEMON="/usr/lib/python2.7/dist-packages/pulse_xmpp_agent/launcher.py"
fi

# Function to start daemon
start () {
        echo -n "Starting ${DESC} : "
    if [ -f /var/run/machine.pid ]; then
        echo "already running"
        return 0
    fi
        python3 ${DAEMON} -t machine >/dev/null 2>&1
        RETVAL=$?
        # If return code is 0, everything went fine
        if [ ${RETVAL} -eq 0 ]
          then
            echo "done."
          else
            echo "failed."
        fi
        return ${RETVAL}
}

# Function to stop daemon
stop () {
    echo -n $"Stopping ${DESC} : "
    pkill -f agentxmpp
    # If return code is 0, everything went fine
        RETVAL=$?
    if [ ${RETVAL} -eq 0 ]
          then
            echo "done."
      else
            echo "failed."
    fi
        return ${RETVAL}
}

# Function to restart (run stop, then start)
restart() {
        stop
        sleep 1
        start
}

case $1 in
        start)
                start
        ;;
        stop)
                stop
        ;;
        restart | force-reload)
                restart
        ;;
        *)

        echo "Usage: ${0} {start|stop|restart|force-reload}"
        exit 1
esac

exit ${RETVAL}
